import{o as n,c as s,a}from"./app.d4385936.js";const t='{"title":"Global store","description":"","frontmatter":{},"headers":[{"level":2,"title":"Description","slug":"description"}],"relativePath":"guide/store.md","lastUpdated":1614565307161}',p={},o=a('<h1 id="global-store"><a class="header-anchor" href="#global-store" aria-hidden="true">#</a> Global store</h1><p>Convue will load the .js|.ts file in the /src/store directory by default and configure it automatically in vuex.</p><p>The content structure of the file is unified with vuex, as follows</p><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n   <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n   mutations<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n   actions<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n   getters<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="description"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p>The index[.js|.ts] under /src/store will load the vuex item directly, and other files will be configured in the form of modules.</p><p>For example, there are two files index.js and user.js.</p><p>index.js</p><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n   <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n     text<span class="token operator">:</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><p>user.js</p><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n   <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n     name<span class="token operator">:</span><span class="token string">&#39;convue&#39;</span><span class="token punctuation">,</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><p>Then the vuex store is actually this structure</p><div class="language-js"><pre><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n   <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n     text<span class="token operator">:</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n   modules<span class="token operator">:</span> <span class="token punctuation">{</span>\n     user<span class="token operator">:</span> <span class="token punctuation">{</span>\n       <span class="token function-variable function">state</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n         text<span class="token operator">:</span><span class="token string">&#39;convue&#39;</span><span class="token punctuation">,</span>\n       <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n     <span class="token punctuation">}</span><span class="token punctuation">,</span>\n   <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><p>For other rules, please <a href="/convue/config/store.html">refer to store configuration items</a>.</p>',14);p.render=function(a,t,p,e,c,u){return n(),s("div",null,[o])};export default p;export{t as __pageData};
